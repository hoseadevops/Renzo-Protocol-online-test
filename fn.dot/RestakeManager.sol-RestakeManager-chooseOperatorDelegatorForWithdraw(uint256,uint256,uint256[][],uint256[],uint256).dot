digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: IF 1

EXPRESSION:
operatorDelegators.length == 1

IRs:
REF_206 -> LENGTH operatorDelegators
TMP_510(bool) = REF_206 == 1
CONDITION TMP_510"];
1->2[label="True"];
1->6[label="False"];
2[label="Node Type: IF 2

EXPRESSION:
operatorDelegatorTokenTVLs[0][tokenIndex] < ezETHValue

IRs:
REF_207(uint256[]) -> operatorDelegatorTokenTVLs[0]
REF_208(uint256) -> REF_207[tokenIndex]
TMP_511(bool) = REF_208 < ezETHValue
CONDITION TMP_511"];
2->3[label="True"];
2->4[label="False"];
3[label="Node Type: EXPRESSION 3

EXPRESSION:
revert NotFound()()

IRs:
TMP_512(None) = SOLIDITY_CALL revert NotFound()()"];
3->4;
4[label="Node Type: END_IF 4
"];
4->5;
5[label="Node Type: RETURN 5

EXPRESSION:
operatorDelegators[0]

IRs:
REF_209(IOperatorDelegator) -> operatorDelegators[0]
RETURN REF_209"];
6[label="Node Type: END_IF 6
"];
6->7;
7[label="Node Type: NEW VARIABLE 7

EXPRESSION:
odLength = operatorDelegatorTVLs.length

IRs:
REF_210 -> LENGTH operatorDelegatorTVLs
odLength(uint256) := REF_210(uint256)"];
7->10;
8[label="Node Type: BEGIN_LOOP 8
"];
8->11;
9[label="Node Type: END_LOOP 9
"];
9->18;
10[label="Node Type: NEW VARIABLE 10

EXPRESSION:
i = 0

IRs:
i(uint256) := 0(uint256)"];
10->8;
11[label="Node Type: IF_LOOP 11

EXPRESSION:
i < odLength

IRs:
TMP_513(bool) = i < odLength
CONDITION TMP_513"];
11->12[label="True"];
11->9[label="False"];
12[label="Node Type: IF 12

EXPRESSION:
operatorDelegatorTVLs[i] > (operatorDelegatorAllocations[operatorDelegators[i]] * totalTVL) / BASIS_POINTS / BASIS_POINTS && operatorDelegatorTokenTVLs[i][tokenIndex] >= ezETHValue

IRs:
REF_211(uint256) -> operatorDelegatorTVLs[i]
REF_212(IOperatorDelegator) -> operatorDelegators[i]
REF_213(uint256) -> operatorDelegatorAllocations[REF_212]
TMP_514(uint256) = REF_213 (c)* totalTVL
TMP_515(uint256) = TMP_514 (c)/ BASIS_POINTS
TMP_516(uint256) = TMP_515 (c)/ BASIS_POINTS
TMP_517(bool) = REF_211 > TMP_516
REF_214(uint256[]) -> operatorDelegatorTokenTVLs[i]
REF_215(uint256) -> REF_214[tokenIndex]
TMP_518(bool) = REF_215 >= ezETHValue
TMP_519(bool) = TMP_517 && TMP_518
CONDITION TMP_519"];
12->13[label="True"];
12->14[label="False"];
13[label="Node Type: RETURN 13

EXPRESSION:
operatorDelegators[i]

IRs:
REF_216(IOperatorDelegator) -> operatorDelegators[i]
RETURN REF_216"];
14[label="Node Type: END_IF 14
"];
14->15;
15[label="Node Type: EXPRESSION 15

EXPRESSION:
++ i

IRs:
i(uint256) = i + 1"];
15->11;
16[label="Node Type: BEGIN_LOOP 16
"];
16->19;
17[label="Node Type: END_LOOP 17
"];
17->24;
18[label="Node Type: NEW VARIABLE 18

EXPRESSION:
i_scope_0 = 0

IRs:
i_scope_0(uint256) := 0(uint256)"];
18->16;
19[label="Node Type: IF_LOOP 19

EXPRESSION:
i_scope_0 < odLength

IRs:
TMP_520(bool) = i_scope_0 < odLength
CONDITION TMP_520"];
19->20[label="True"];
19->17[label="False"];
20[label="Node Type: IF 20

EXPRESSION:
operatorDelegatorTokenTVLs[i_scope_0][tokenIndex] >= ezETHValue

IRs:
REF_217(uint256[]) -> operatorDelegatorTokenTVLs[i_scope_0]
REF_218(uint256) -> REF_217[tokenIndex]
TMP_521(bool) = REF_218 >= ezETHValue
CONDITION TMP_521"];
20->21[label="True"];
20->22[label="False"];
21[label="Node Type: RETURN 21

EXPRESSION:
operatorDelegators[i_scope_0]

IRs:
REF_219(IOperatorDelegator) -> operatorDelegators[i_scope_0]
RETURN REF_219"];
22[label="Node Type: END_IF 22
"];
22->23;
23[label="Node Type: EXPRESSION 23

EXPRESSION:
++ i_scope_0

IRs:
i_scope_0(uint256) = i_scope_0 + 1"];
23->19;
24[label="Node Type: EXPRESSION 24

EXPRESSION:
revert NotFound()()

IRs:
TMP_522(None) = SOLIDITY_CALL revert NotFound()()"];
}
