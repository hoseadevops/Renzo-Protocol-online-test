digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
oldAllowance = token.allowance(address(this),spender)

IRs:
TMP_153 = CONVERT this to address
TMP_154(uint256) = HIGH_LEVEL_CALL, dest:token(IERC20), function:allowance, arguments:['TMP_153', 'spender']  
oldAllowance(uint256) := TMP_154(uint256)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
_callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,oldAllowance + value))

IRs:
REF_56(bytes4) (->None) := 157198259(uint256)
TMP_155(uint256) = oldAllowance (c)+ value
TMP_156(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_56,spender,TMP_155)
INTERNAL_CALL, SafeERC20._callOptionalReturn(IERC20,bytes)(token,TMP_156)"];
}
