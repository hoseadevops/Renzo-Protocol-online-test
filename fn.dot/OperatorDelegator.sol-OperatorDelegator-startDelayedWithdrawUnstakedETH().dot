digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->4;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
beforeEigenPodBalance = address(eigenPod).balance

IRs:
TMP_294 = CONVERT eigenPod to address
TMP_295(uint256) = SOLIDITY_CALL balance(address)(TMP_294)
beforeEigenPodBalance(uint256) := TMP_295(uint256)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
eigenPod.withdrawBeforeRestaking()

IRs:
HIGH_LEVEL_CALL, dest:eigenPod(IEigenPod), function:withdrawBeforeRestaking, arguments:[]  "];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
pendingUnstakedDelayedWithdrawalAmount += (beforeEigenPodBalance - address(eigenPod).balance)

IRs:
TMP_297 = CONVERT eigenPod to address
TMP_298(uint256) = SOLIDITY_CALL balance(address)(TMP_297)
TMP_299(uint256) = beforeEigenPodBalance (c)- TMP_298
pendingUnstakedDelayedWithdrawalAmount(uint256) = pendingUnstakedDelayedWithdrawalAmount (c)+ TMP_299"];
4[label="Node Type: EXPRESSION 4

EXPRESSION:
onlyNativeEthRestakeAdmin()

IRs:
MODIFIER_CALL, OperatorDelegator.onlyNativeEthRestakeAdmin()()"];
4->1;
}
